
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import java.net.URL;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import java.util.ArrayList;
import java.util.Random;

public class RecPanel extends javax.swing.JPanel {

    
    public recipe rec;
    public Main main;
    
    /**
     * This constructor creates a new form RecPanel for a recipe
     * @param rec,main
     */
    public RecPanel(recipe rec, Main main) {
        this.rec = rec;
        this.main = main;
        initComponents();
        nameLabel.setText(rec.getDishName());
        calorieLabel.setText("Calorie Count: " + String.valueOf(rec.getCalories()));
        typeLabel.setText("Cuisine Type: " + rec.getCuisineType());
        //timeLabel.setText("Cooking Time: " + String.valueOf(rec.getCookTime()));
        
        // SET TO RANDOM COLOR
        Random ran = new Random();
        int num1 = ran.nextInt(256);
        int num2 = ran.nextInt(256);
        int num3 = ran.nextInt(256);
        Color color = new Color(num1, num2, num3);
        setBackground(color);
        this.setOpaque(true);
        
        if (num1 < 200 && num2 < 200 && num3 < 200) {
            nameLabel.setForeground(new java.awt.Color(255, 255, 255));
            calorieLabel.setForeground(new java.awt.Color(255, 255, 255));
            typeLabel.setForeground(new java.awt.Color(255, 255, 255));
            //timeLabel.setForeground(new java.awt.Color(255, 255, 255));
            recipePageLabel.setForeground(new java.awt.Color(255, 255, 255));
            commentLabel.setForeground(new java.awt.Color(255, 255, 255));
        }
        
        if (main.currentUser == null) {
            commentLabel.setVisible(false);
        }
        deleteButton.setVisible(false);
        if (main.currentUser != null && main.currentUser.isAdmin) {
            deleteButton.setVisible(true);
        }
        
        
        
        
        
        
        

        
    }
    /**
     * this method gives us the recipe that is assigned to the recipe panel
     * @return rec
     */
    public recipe getRec() {
        return rec;
    }


    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        calorieLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        commentLabel = new javax.swing.JLabel();
        recipePageLabel = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        deleteButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 51));

        nameLabel.setText("Recipe Name");

        calorieLabel.setText("Calories");

        typeLabel.setText("Cuisine Type");

        commentLabel.setBackground(new java.awt.Color(204, 255, 51));
        commentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        commentLabel.setText("COMMENT");
        commentLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                commentLabelMouseClicked(evt);
            }
        });

        recipePageLabel.setBackground(new java.awt.Color(0, 204, 204));
        recipePageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        recipePageLabel.setText("Recipe Page");
        recipePageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recipePageLabelMouseClicked(evt);
            }
        });

        jCheckBox1.setText("Important");

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(calorieLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(typeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(recipePageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(commentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox1))
                    .addComponent(deleteButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calorieLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(typeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recipePageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * this method opens the comment board for each recipe
     * through a clicking action
     * @param evt
     * @return none
     */
    private void commentLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_commentLabelMouseClicked
        // Open the commentBoard for the recipe
        if (main.currentUser != null) {
            CommentBoard cb = new CommentBoard(rec, main);
            cb.show();
        }
    }//GEN-LAST:event_commentLabelMouseClicked
    
    /**
     * this method opens up the individual page for the recipe
     * @param evt
     * @return none
     */
    private void recipePageLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recipePageLabelMouseClicked
        RecipePage rp = new RecipePage(rec, main);
        rp.show();
        
    }//GEN-LAST:event_recipePageLabelMouseClicked

    /**
     * this method allows the admin to remove recipes
     * @param evt
     * @return none
     */
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        this.main.recipes.remove(rec);
        RecipeDisplay recDis = new RecipeDisplay(main, main.recipes);
        main.recDis.dispose();
        recDis.show();
        main.saveRecipes();
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel calorieLabel;
    private javax.swing.JLabel commentLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel recipePageLabel;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
}
